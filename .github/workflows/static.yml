# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: Generate Atom Feed
        run: |
          mkdir -p docs
          LINK_URL="https://developers.karte.io/docs/release-notes-ios-sdk-v2#/"
          FEED_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/feed.atom"
          UPDATED=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          cat > docs/feed.atom << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <feed xmlns="http://www.w3.org/2005/Atom">
            <title>iOS SDK Release Notes</title>
            <link href="${LINK_URL}" rel="alternate"/>
            <link href="${FEED_URL}" rel="self"/>
            <id>${FEED_URL}</id>
            <updated>${UPDATED}</updated>
          EOF

          git log -20 --pretty=format:'%H|%an|%ae|%aI|%s|%b' | while IFS='|' read hash author email date subject body; do
            # Escape XML special characters
            subject_escaped=$(echo "$subject" | sed 's/&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g; s/"/\&quot;/g; s/'\''/\&apos;/g')
            body_escaped=$(echo "$body" | sed 's/&/\&amp;/g; s/</\&lt;/g; s/>/\&gt;/g; s/"/\&quot;/g; s/'\''/\&apos;/g')

            cat >> docs/feed.atom << EOF
            <entry>
              <title>${subject_escaped}</title>
              <link href="${LINK_URL}"/>
              <id>urn:commit:${hash}</id>
              <updated>${date}</updated>
              <author>
                <name>${author}</name>
                <email>${email}</email>
              </author>
              <content type="html">${body_escaped}</content>
              <summary>${subject_escaped}</summary>
            </entry>
          EOF
          done

          cat >> docs/feed.atom << 'EOF'
          </feed>
          EOF

          echo "Generated Atom feed with link to: ${LINK_URL}"
      - name: Generate index.html
        run: |
          FEED_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/feed.atom"
          sed "s|{{FEED_URL}}|${FEED_URL}|g" .github/templates/index.html.template > docs/index.html
          echo "Generated index.html with feed URL: ${FEED_URL}"
      - name: Setup Pages
        uses: actions/configure-pages@983d7736d9b0ae728b81ab479565c72886d7745b # v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa # v3
        with:
          # Upload docs directory containing RSS feed
          path: 'docs'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4
